/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sgbd.forms.dialogs;

import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sgbd.controllers.Controller;
import sgbd.database.Table;
import sgbd.database.Attribute;

/**
 *
 * @author Paul
 */
public class TableAlterationPanel extends javax.swing.JPanel {
    private Table table;
    private Controller controller;
    private ArrayList<String> colonnes;

    /**
     * Creates new form TableModifPanel
     * @param controller
     * @param table
     */
    public TableAlterationPanel(Controller controller, Table table) {
        initComponents();
        this.controller = controller;
        this.table = table;
        getTableInfo();
        labelTableName.setText(table.getName());
  
    }

    private void getTableInfo() {
        DefaultTableModel tableModel = (DefaultTableModel) tableModif.getModel();
        tableModel.setRowCount(0);
        ArrayList<Attribute> vide = new ArrayList<>();
        table.setAttributes(vide);
        controller.getAttributesList(table);
        colonnes = new ArrayList<>();

        table.attributes().forEach((unAttribute) -> {
            tableModel.addRow(unAttribute.toObject());
            colonnes.add(unAttribute.getName());
            System.out.println(unAttribute.getName());
        });

    }
     

    
    public void modifTable(Object ancienAttribut, Object nouvelAttribut){
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxListeColonnes = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnDiscard = new javax.swing.JButton();
        btnRenameTable = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        labelTableName = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableModif = new javax.swing.JTable();
        buttonAddColonne = new javax.swing.JButton();
        buttonDropColonne = new javax.swing.JButton();

        comboBoxListeColonnes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSave.setText("Sauvegarder");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDiscard.setText("Annuler");

        btnRenameTable.setText("Changer le nom de la table");
        btnRenameTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenameTableActionPerformed(evt);
            }
        });

        jLabel1.setText("Nom de la table : ");

        labelTableName.setText("TABLE_NAME");

        tableModif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Type", "Longueur", "Clé primaire", "Not null", "Unique", "Clé étrangère"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableModif);
        if (tableModif.getColumnModel().getColumnCount() > 0) {
            tableModif.getColumnModel().getColumn(2).setMinWidth(80);
            tableModif.getColumnModel().getColumn(2).setPreferredWidth(80);
            tableModif.getColumnModel().getColumn(2).setMaxWidth(80);
            tableModif.getColumnModel().getColumn(3).setMinWidth(80);
            tableModif.getColumnModel().getColumn(3).setPreferredWidth(80);
            tableModif.getColumnModel().getColumn(3).setMaxWidth(80);
            tableModif.getColumnModel().getColumn(4).setMinWidth(80);
            tableModif.getColumnModel().getColumn(4).setPreferredWidth(80);
            tableModif.getColumnModel().getColumn(4).setMaxWidth(80);
            tableModif.getColumnModel().getColumn(5).setMinWidth(80);
            tableModif.getColumnModel().getColumn(5).setPreferredWidth(80);
            tableModif.getColumnModel().getColumn(5).setMaxWidth(80);
        }

        buttonAddColonne.setText("Ajouter une colonne");

        buttonDropColonne.setText("Supprimer une colonne");
        buttonDropColonne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDropColonneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAddColonne, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(labelTableName))
                                .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                .addComponent(btnDiscard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRenameTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(buttonDropColonne, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 813, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(labelTableName))
                        .addGap(18, 18, 18)
                        .addComponent(btnRenameTable)
                        .addGap(86, 86, 86)
                        .addComponent(buttonAddColonne, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDropColonne, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDiscard, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRenameTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenameTableActionPerformed
        String inputNom;
        inputNom = JOptionPane.showInputDialog(null, "Entre le nouveau nom de la table : ", "Renommage de la table", JOptionPane.QUESTION_MESSAGE);
        if(controller.renameTable(table.getName(), inputNom.toUpperCase()) == true)
        {

        }

    }//GEN-LAST:event_btnRenameTableActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //modifTable();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void buttonDropColonneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDropColonneActionPerformed
        String [] colonnesCB = colonnes.toArray(new String[colonnes.size()]);
        String droppedColonne;
        
        droppedColonne = (String) JOptionPane.showInputDialog(null, "Choisissez la colonne à supprimer : ", "Suppression d'une colonne", JOptionPane.QUESTION_MESSAGE, null, colonnesCB, colonnesCB[0]);
        if (droppedColonne != null)
        {
            int dialogConfirmation = JOptionPane.showConfirmDialog(null, "Êtes-vous sûr de vouloir supprimer la colonne " + droppedColonne + " ?", "Confirmation", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION);
            if (dialogConfirmation == JOptionPane.YES_OPTION)
            {            
            controller.dropColonne(table.getName(), droppedColonne);
            getTableInfo();}
        }
    }//GEN-LAST:event_buttonDropColonneActionPerformed

    public JButton getButton(String s) {
            switch(s) {
                case "annuler":
                    return btnDiscard;
                case "rename":
                    return btnRenameTable;
                default:
                    return btnSave;
            }
        }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDiscard;
    private javax.swing.JButton btnRenameTable;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton buttonAddColonne;
    private javax.swing.JButton buttonDropColonne;
    private javax.swing.JComboBox<String> comboBoxListeColonnes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelTableName;
    private javax.swing.JTable tableModif;
    // End of variables declaration//GEN-END:variables
}
