package sgbd.forms.dialogs;

import javax.swing.DefaultCellEditor;
import javax.swing.JDialog;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sgbd.controllers.Controller;


public class RequeteGraphiquePanel extends javax.swing.JPanel {
    
    private Controller controller;

    /**
     * Creates new form TableRequeteGraphique
     * @param controller
     */
    public RequeteGraphiquePanel(Controller controller) {
        initComponents();
        this.controller = controller;
        
        String[] tables = controller.getTablesList();
        TableColumn tableColumn = tableRequete.getColumnModel().getColumn(0);
        for (String table : tables) {
            comboBoxTables.addItem(table);
        }
        tableColumn.setCellEditor(new DefaultCellEditor(comboBoxTables));
        comboBoxTables.setSelectedIndex(1);
        
        TableColumn attributColumn = tableRequete.getColumnModel().getColumn(1);
        attributColumn.setCellEditor(new DefaultCellEditor(comboBoxAttributs));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxTables = new javax.swing.JComboBox<>();
        comboBoxAttributs = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRequete = new javax.swing.JTable();
        btnExecuterRequete = new javax.swing.JButton();
        btnRemoveLigne = new javax.swing.JButton();
        btnAddLigne = new javax.swing.JButton();

        comboBoxTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTablesActionPerformed(evt);
            }
        });

        tableRequete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Table", "Attribut", "Condition", "Groupement"
            }
        ));
        jScrollPane1.setViewportView(tableRequete);

        btnExecuterRequete.setText("Exécuter la requête");
        btnExecuterRequete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuterRequeteActionPerformed(evt);
            }
        });

        btnRemoveLigne.setText("Retirer une ligne");
        btnRemoveLigne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveLigneActionPerformed(evt);
            }
        });

        btnAddLigne.setText("Ajouter une ligne");
        btnAddLigne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLigneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveLigne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddLigne, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(btnExecuterRequete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(btnAddLigne, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemoveLigne, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExecuterRequete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboBoxTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTablesActionPerformed
        if (comboBoxTables.getSelectedItem() != null) {
            comboBoxAttributs.removeAllItems();
            String[] attributs = controller.getNomsAttributsFromNomTable(comboBoxTables.getSelectedItem().toString());
            for (String attribut : attributs) {
                comboBoxAttributs.addItem(attribut);
            }
        }


    }//GEN-LAST:event_comboBoxTablesActionPerformed

    private void btnExecuterRequeteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuterRequeteActionPerformed
        final JDialog dialog = new JDialog();
        dialog.setTitle("Résultat");
        dialog.setModal(true);
        dialog.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        String attribut = tableRequete.getValueAt(0, 1).toString();
        String table = tableRequete.getValueAt(0, 0).toString();
        String condition = tableRequete.getValueAt(0, 2).toString();
        ResultatRequetePanel content = new ResultatRequetePanel(controller, controller.traduireLigneRequeteGraphiqueEnSql(attribut, table, condition));
        dialog.setContentPane(content);
        dialog.setResizable(true);
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_btnExecuterRequeteActionPerformed

    private void btnAddLigneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLigneActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableRequete.getModel();
        Object[] row = null;
        model.addRow(row);
    }//GEN-LAST:event_btnAddLigneActionPerformed

    private void btnRemoveLigneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveLigneActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableRequete.getModel();
        int nbRow = model.getRowCount();
        if (nbRow > 0)
            model.removeRow(nbRow - 1);
    }//GEN-LAST:event_btnRemoveLigneActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLigne;
    private javax.swing.JButton btnExecuterRequete;
    private javax.swing.JButton btnRemoveLigne;
    private javax.swing.JComboBox<String> comboBoxAttributs;
    private javax.swing.JComboBox<String> comboBoxTables;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRequete;
    // End of variables declaration//GEN-END:variables
}
