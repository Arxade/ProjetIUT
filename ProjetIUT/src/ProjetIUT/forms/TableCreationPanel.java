/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ProjetIUT.forms;

import ProjetIUT.classesConnexion.Connexion;
import java.awt.Window;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Kazed
 */
public class TableCreationPanel extends javax.swing.JPanel {

    private Connexion c;
    private int nbCol = 0;

    /**
     * Creates new form TableCreationPanel
     *
     * @param c
     */
    public TableCreationPanel(Connexion c) {
        initComponents();
        this.c = c;

        //set du nbr de lignes de la table 
        try {
            String strNbCol = JOptionPane.showInputDialog("Entrer le nombre de colonnes : ");
            if (strNbCol == null) {
                nbCol = 0;
            } else {
                nbCol = Integer.parseInt(strNbCol);
            }
        } catch (Exception e) {
            //  }   
        }

        DefaultTableModel model = (DefaultTableModel) tableCreation.getModel();
        model.setRowCount(0);
        Object[] row = null;

        for (int i = 0; i < nbCol; i++) {
            model.addRow(row);
        }

    }

    public JTextField getTableName() {
        return txtTableName;
    }

    public JButton getButton(String s) {
        switch(s) {
            case "annuler":
                return annulerBtn;
            default:
                return btnCreateTable;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTableName = new javax.swing.JLabel();
        txtTableName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCreation = new javax.swing.JTable();
        btnCreateTable = new javax.swing.JButton();
        removeRowBtn = new javax.swing.JButton();
        addRowBtn = new javax.swing.JButton();
        annulerBtn = new javax.swing.JButton();

        lblTableName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblTableName.setText("Nom de la table :");

        txtTableName.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTableName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTableName.setMaximumSize(new java.awt.Dimension(128, 20));
        txtTableName.setMinimumSize(new java.awt.Dimension(128, 20));
        txtTableName.setPreferredSize(new java.awt.Dimension(128, 20));

        tableCreation.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tableCreation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Type", "Clef primaire", "NOT NULL", "UNIQUE", "Clef étrangère" , "Default"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableCreation);

        btnCreateTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCreateTable.setText("Créer Table");
        btnCreateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateTableActionPerformed(evt);
            }
        });

        removeRowBtn.setText("Retirer une colonne");
        removeRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowBtnActionPerformed(evt);
            }
        });

        addRowBtn.setText("Ajouter une colonne");
        addRowBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowBtnActionPerformed(evt);
            }
        });

        annulerBtn.setText("Annuler");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(addRowBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(removeRowBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreateTable, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(annulerBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTableName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTableName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTableName))
                        .addGap(96, 96, 96)
                        .addComponent(addRowBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(removeRowBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(btnCreateTable, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(annulerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateTableActionPerformed
        TableModel comp = tableCreation.getModel();
        boolean primaire = false;
        String pk = "";
        String fk = "";
        String notNull = "";
        String unique = "";
        String type = "";
        String req = "CREATE TABLE " + txtTableName.getText().toUpperCase() + " (";
        for (int i = 0; i < comp.getRowCount(); i++) {
            String nomAttribut = (String) comp.getValueAt(i, 0);
            if (i > 0) {
                req += ", " + nomAttribut;
            } else {
                req += nomAttribut;
            }
            for (int y = 1; y < tableCreation.getColumnCount() + 1; y++) {
                switch (comp.getColumnName(y)) {
                    case "Type":
                        type = (String) comp.getValueAt(i, y);
                        break;
                    case "Clef primaire":
                        if (comp.getValueAt(i, y) != null) {
                            primaire = (boolean) comp.getValueAt(i, y);
                        }
                        if (primaire) {
                            if (pk.length() == 0) {
                                pk = nomAttribut;
                            } else {
                                pk += ", " + nomAttribut;
                            }
                        }
                        break;
                    case "NOT NULL":
                        System.out.println(comp.getValueAt(i, y));
                        if (comp.getValueAt(i, y) != null) {
                            notNull += ", CONSTRAINT nn_" + nomAttribut.toLowerCase() + " CHECK(" + nomAttribut + " IS NOT NULL)";
                        }
                        break;
                    case "Clef étrangère":
                        String laFk = "";
                        if (comp.getValueAt(i, y) != null) {
                            laFk = (String) comp.getValueAt(i, y);
                        }
                        if (laFk.length() > 1) {
                            fk = ", CONSTRAINT fk_" + nomAttribut.toLowerCase() + " FOREIGN KEY (" + nomAttribut.toUpperCase() + ") REFERENCES " + (String) comp.getValueAt(i, y);
                        }
                        break;
                    case "unique":
                        if (comp.getValueAt(i, y) != null) {
                            unique = ", CONSTRAINT un_" + nomAttribut.toLowerCase() + " UNIQUE (" + nomAttribut.toUpperCase() + ") ";
                        }

                        break;
                    case "Default":
                        if (comp.getValueAt(i, y) != null) {
                            type += " DEFAULT " + (String) comp.getValueAt(i, y);
                        }
                        break;
                }
            }
            req = req + " " + type;
            primaire = false;
        }
        req = req + ", CONSTRAINT pk_" + txtTableName.getText().toLowerCase() + " PRIMARY KEY (" + pk + ") " + fk + " " + notNull + " " + unique;
        req = req + ")";
        System.out.println(req);
        try {
            c.query(req);
            JOptionPane.showMessageDialog(this, "Table " + txtTableName.getText().toUpperCase() + " créée.");
        } catch (SQLException ex) {
            Logger.getLogger(ConnectionPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Erreur à la création de la table \n" + ex);
        }
    }//GEN-LAST:event_btnCreateTableActionPerformed

    private void addRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableCreation.getModel();
        Object[] row = null;
        model.addRow(row);
    }//GEN-LAST:event_addRowBtnActionPerformed

    private void removeRowBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowBtnActionPerformed
        DefaultTableModel model = (DefaultTableModel) tableCreation.getModel();
        int nbRow = model.getRowCount();
        model.removeRow(nbRow - 1);
    }//GEN-LAST:event_removeRowBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRowBtn;
    private javax.swing.JButton annulerBtn;
    private javax.swing.JButton btnCreateTable;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTableName;
    private javax.swing.JButton removeRowBtn;
    private javax.swing.JTable tableCreation;
    private javax.swing.JTextField txtTableName;
    // End of variables declaration//GEN-END:variables
}
